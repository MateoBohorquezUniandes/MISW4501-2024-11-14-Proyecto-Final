{
	"info": {
		"_postman_id": "3599ef61-0b01-4fe0-8228-5a00ed122469",
		"name": "planes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25979776"
	},
	"item": [
		{
			"name": "plan success",
			"item": [
				{
					"name": "crear plan",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var eCount = parseInt(pm.collectionVariables.get(\"planes.exigencia.count\"));",
									"var exigencias = JSON.parse(pm.collectionVariables.get(\"planes.exigencia\"));",
									"pm.collectionVariables.set(\"plan.objetivo.exigencia\", exigencias[eCount]);",
									"",
									"var dCount = parseInt(pm.collectionVariables.get(\"planes.deportes.count\"));",
									"var deportes = JSON.parse(pm.collectionVariables.get(\"planes.deportes\"));",
									"pm.collectionVariables.set(\"plan.objetivo.deporte\", deportes[dCount]);",
									"",
									"var cCount = parseInt(pm.collectionVariables.get(\"planes.categorias.count\"));",
									"var categorias = JSON.parse(pm.collectionVariables.get(\"planes.categorias\"));",
									"pm.collectionVariables.set(\"plan.categoria\", categorias[cCount]);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									"",
									"",
									"var eCount = parseInt(pm.collectionVariables.get(\"planes.exigencia.count\"));",
									"var dCount = parseInt(pm.collectionVariables.get(\"planes.deportes.count\"));",
									"var cCount = parseInt(pm.collectionVariables.get(\"planes.categorias.count\"));",
									"",
									"if (cCount > 0) {",
									"    if (eCount === 0) {",
									"        var exigencias = JSON.parse(pm.collectionVariables.get(\"planes.exigencia\"));",
									"        pm.collectionVariables.set(\"planes.exigencia.count\", exigencias.length - 1);",
									"",
									"        if (dCount === 0) {",
									"            var deportes = JSON.parse(pm.collectionVariables.get(\"planes.deportes\"));",
									"            pm.collectionVariables.set(\"planes.deportes.count\", deportes.length - 1);",
									"            pm.collectionVariables.set(\"planes.categorias.count\", cCount - 1);",
									"        } else {",
									"            pm.collectionVariables.set(\"planes.deportes.count\", dCount - 1);",
									"        }",
									"    }",
									"    else {",
									"        pm.collectionVariables.set(\"planes.exigencia.count\", eCount - 1);",
									"    }",
									"    postman.setNextRequest(pm.info.requestName);",
									"} else {",
									"    postman.setNextRequest(\"obtener planes\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plan {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n    \"categoria\": \"{{plan.categoria}}\",\n    \"descripcion\": \"Plan para entrenar {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n    \"objetivo\": {\n        \"exigencia\": \"{{plan.objetivo.exigencia}}\",\n        \"deporte\": \"{{plan.objetivo.deporte}}\"\n    },\n    \"entrenamientos\": [\n        {\n            \"nombre\": \"Entrenamiento {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n            \"descripcion\": \"Entrenamiento de {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n            \"grupo_muscular\": {{entrenamiento.grupo}},\n            \"imagen\": {{entrenamiento.imagen}},\n            \"duracion\": {\n                \"valor\": {{entrenamiento.duracion.valor}},\n                \"unidad\": {{entrenamiento.duracion.unidad}},\n                \"series\": {{entrenamiento.duracion.series}}\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands"
							]
						}
					},
					"response": []
				},
				{
					"name": "obtener planes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    const plan = responseData[0]",
									"    pm.expect(plan).to.be.an('object');",
									"    pm.expect(plan.id).to.be.an('string');",
									"    pm.expect(plan.nombre).to.be.an('string');",
									"    pm.expect(plan.descripcion).to.be.an('string');",
									"    pm.expect(plan.categoria).to.be.an('string');",
									"    pm.expect(plan.objetivo).to.be.an('object');",
									"    pm.expect(plan.objetivo.deporte).to.be.an('string');",
									"    pm.expect(plan.objetivo.exigencia).to.be.an('string');",
									"    pm.expect(plan.entrenamientos).to.be.an('array');",
									"",
									"    let ids = responseData.map(p => p.id);",
									"    pm.collectionVariables.set(\"planes.ids\", JSON.stringify(ids));",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/planes/queries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"queries"
							]
						}
					},
					"response": []
				},
				{
					"name": "obtener entrenamientos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json()[0];",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.be.an('string');",
									"    pm.expect(responseData.nombre).to.be.an('string');",
									"    pm.expect(responseData.descripcion).to.be.an('string');",
									"    pm.expect(responseData.grupo_muscular).to.be.an('string');",
									"    pm.expect(responseData.duracion).to.be.an('object');",
									"    pm.expect(responseData.duracion.unidad).to.be.an('string');",
									"    pm.expect(responseData.duracion.valor).to.be.an('number');",
									"    pm.expect(responseData.duracion.series).to.be.an('number');",
									"    pm.expect(responseData.imagen).to.be.an('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/planes/queries/entrenamientos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"queries",
								"entrenamientos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "plan usuario success",
			"item": [
				{
					"name": "asociar plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"correlation_id\": {{correlation_id}},\n    \"specversion\": \"v1\",\n    \"type\": \"event\",\n    \"datacontenttype\": \"application/json\",\n    \"payload\": {\n        \"created_at\": \"2024-04-10T02:02:01Z\",\n        \"tipo_identificacion\": {{usuario.tipo_identificacion}},\n        \"identificacion\": {{usuario.identificacion}},\n        \"clasificacion_riesgo\": {\n            \"imc\": {\n                \"valor\": {{clasificacion_riesgo.imc.valor}},\n                \"categoria\": {{clasificacion_riesgo.imc.categoria}}\n            },\n            \"riesgo\": {{clasificacion_riesgo.riesgo}}\n        },\n        \"demografia\": {\n            \"pais\": {{demografico.demografia.pais}},\n            \"ciudad\": {{demografico.demografia.ciudad}}\n        },\n        \"fisiologia\": {\n            \"genero\": {{fisiologia.genero}},\n            \"edad\": {{fisiologia.edad}},\n            \"altura\": {{fisiologia.altura}},\n            \"peso\": {{fisiologia.peso}}\n        },\n        \"deportes\": {{usuario.deportes}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands/asociar",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands",
								"asociar"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "rutinas alimentacion success",
			"item": [
				{
					"name": "crear rutina alimentacion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tCount = parseInt(pm.collectionVariables.get(\"alimentos.tipos_alimentacion.count\"));",
									"var tipos = JSON.parse(pm.collectionVariables.get(\"alimentos.tipos_alimentacion\"));",
									"pm.collectionVariables.set(\"alimento.tipo_alimentacion\", tipos[tCount]);",
									"",
									"var dCount = parseInt(pm.collectionVariables.get(\"alimentos.deportes.count\"));",
									"var deportes = JSON.parse(pm.collectionVariables.get(\"planes.deportes\"));",
									"pm.collectionVariables.set(\"alimento.deporte\", deportes[dCount]);",
									"",
									"",
									"const grupos = ['Carbohidrato', 'Lipido', 'Lacteo', 'Fruta', 'Verdura', 'Proteina'];",
									"const unidades = ['Taza', 'Cuchara', 'Cucharadita'];",
									"pm.collectionVariables.set(\"alimento.grupo.grupo\", grupos[_.random(0, grupos.length - 1)]);",
									"pm.collectionVariables.set(\"alimento.grupo.porcion\", _.random(1, 10));",
									"pm.collectionVariables.set(\"alimento.grupo.unidad\", unidades[_.random(0, unidades.length - 1)]);",
									"pm.collectionVariables.set(\"alimento.grupo.calorias\", _.random(1, 5000));",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									"",
									"var uCount = parseInt(pm.collectionVariables.get(\"alimentos.tipos_alimentacion.count\"));",
									"var gCount = parseInt(pm.collectionVariables.get(\"alimentos.deportes.count\"));",
									"",
									"if (gCount > 0) {",
									"    if (uCount === 0) {",
									"        var unidades = JSON.parse(pm.collectionVariables.get(\"alimentos.tipos_alimentacion\"));",
									"        pm.collectionVariables.set(\"alimentos.tipos_alimentacion.count\", unidades.length - 1);",
									"        pm.collectionVariables.set(\"alimentos.deportes.count\", gCount - 1);",
									"    }",
									"    else {",
									"        pm.collectionVariables.set(\"alimentos.tipos_alimentacion.count\", uCount - 1);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Rutina {{alimento.tipo_alimentacion}} {{alimento.deporte}}\",\n    \"descripcion\": \"Alimentacion para {{alimento.deporte}} de {{alimento.tipo_alimentacion}}s\",\n    \"imagen\": \"https://fake.image.com\",\n    \"tipo_alimentacion\": \"{{alimento.tipo_alimentacion}}\",\n    \"deporte\": \"{{alimento.deporte}}\",\n    \"grupos_alimenticios\": [\n        {\n            \"grupo\": \"{{alimento.grupo.grupo}}\",\n            \"porcion\": {{alimento.grupo.porcion}},\n            \"unidad\": \"{{alimento.grupo.unidad}}\",\n            \"calorias\": {{alimento.grupo.calorias}}\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands/rutinas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands",
								"rutinas"
							]
						}
					},
					"response": []
				},
				{
					"name": "obtener rutinas",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify data types for response fields\", function () {\r",
									"    const response = pm.response.json()[0];\r",
									"    pm.expect(response.created_at).to.be.a(\"string\");\r",
									"    pm.expect(response.id).to.be.a(\"string\");\r",
									"    pm.expect(response.nombre).to.be.a(\"string\");\r",
									"    pm.expect(response.descripcion).to.be.a(\"string\");\r",
									"    pm.expect(response.imagen).to.be.a(\"string\");\r",
									"    pm.expect(response.deporte).to.be.a(\"string\");\r",
									"    pm.expect(response.tipo_alimentacion).to.be.a(\"string\");\r",
									"    pm.expect(response.grupos_alimenticios).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/planes/queries/rutinas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"queries",
								"rutinas"
							],
							"query": [
								{
									"key": "deporte",
									"value": "Atletismo",
									"disabled": true
								},
								{
									"key": "tipo",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "plan fail",
			"item": [
				{
					"name": "crear plan duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 400', function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plan {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n    \"categoria\": \"{{plan.categoria}}\",\n    \"descripcion\": \"Plan para entrenar {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n    \"objetivo\": {\n        \"exigencia\": \"{{plan.objetivo.exigencia}}\",\n        \"deporte\": \"{{plan.objetivo.deporte}}\"\n    },\n    \"entrenamientos\": [\n        {\n            \"nombre\": \"Entrenamiento {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n            \"descripcion\": \"Entrenamiento de {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n            \"grupo_muscular\": {{entrenamiento.grupo}},\n            \"imagen\": {{entrenamiento.imagen}},\n            \"duracion\": {\n                \"valor\": {{entrenamiento.duracion.valor}},\n                \"unidad\": {{entrenamiento.duracion.unidad}},\n                \"series\": {{entrenamiento.duracion.series}}\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear plan sin nombre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"categoria\": \"{{plan.categoria}}\",\n    \"descripcion\": \"Plan para entrenar {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n    \"objetivo\": {\n        \"exigencia\": \"{{plan.objetivo.exigencia}}\",\n        \"deporte\": \"{{plan.objetivo.deporte}}\"\n    },\n    \"entrenamientos\": [\n        {\n            \"nombre\": \"Entrenamiento {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n            \"descripcion\": \"Entrenamiento de {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n            \"grupo_muscular\": {{entrenamiento.grupo}},\n            \"imagen\": {{entrenamiento.imagen}},\n            \"duracion\": {\n                \"valor\": {{entrenamiento.duracion.valor}},\n                \"unidad\": {{entrenamiento.duracion.unidad}},\n                \"series\": {{entrenamiento.duracion.series}}\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear plan sin descripcion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plan {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n    \"categoria\": \"{{plan.categoria}}\",\n\n    \"objetivo\": {\n        \"exigencia\": \"{{plan.objetivo.exigencia}}\",\n        \"deporte\": \"{{plan.objetivo.deporte}}\"\n    },\n    \"entrenamientos\": [\n        {\n            \"nombre\": \"Entrenamiento {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n            \"descripcion\": \"Entrenamiento de {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n            \"grupo_muscular\": {{entrenamiento.grupo}},\n            \"imagen\": {{entrenamiento.imagen}},\n            \"duracion\": {\n                \"valor\": {{entrenamiento.duracion.valor}},\n                \"unidad\": {{entrenamiento.duracion.unidad}},\n                \"series\": {{entrenamiento.duracion.series}}\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear plan sin categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Plan Sin Categoria {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n\n    \"descripcion\": \"Plan para entrenar {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n    \"objetivo\": {\n        \"exigencia\": \"{{plan.objetivo.exigencia}}\",\n        \"deporte\": \"{{plan.objetivo.deporte}}\"\n    },\n    \"entrenamientos\": [\n        {\n            \"nombre\": \"Entrenamiento {{plan.categoria}} {{plan.objetivo.deporte}} {{plan.objetivo.exigencia}}\",\n            \"descripcion\": \"Entrenamiento de {{plan.objetivo.deporte}} enfocado en {{plan.categoria}} para deportistas {{plan.objetivo.exigencia}}\",\n            \"grupo_muscular\": {{entrenamiento.grupo}},\n            \"imagen\": {{entrenamiento.imagen}},\n            \"duracion\": {\n                \"valor\": {{entrenamiento.duracion.valor}},\n                \"unidad\": {{entrenamiento.duracion.unidad}},\n                \"series\": {{entrenamiento.duracion.series}}\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/planes/commands",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"commands"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "plan usuario fail",
			"item": [
				{
					"name": "obtener planes asociados sin usuario",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: `${pm.collectionVariables.get(\"auth_url\")}/auth`,\r",
									"    method: 'POST',\r",
									"    header: { 'content-type': 'application/json' },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"            \"tipo\": \"fake_tipo\",\r",
									"            \"valor\": \"fake_valor\"\r",
									"        })\r",
									"    }\r",
									"},\r",
									"    (_err, response) => pm.collectionVariables.set(\"fake_token\", response.json().token)\r",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 404', function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{fake_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/planes/queries/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"planes",
								"queries",
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.sendRequest({",
					"    url: `${pm.collectionVariables.get(\"auth_url\")}/auth`,",
					"    method: 'POST',",
					"    header: { 'content-type': 'application/json' },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            \"tipo\": pm.collectionVariables.get(\"deportista.tipo_identificacion\"),",
					"            \"valor\": pm.collectionVariables.get(\"deportista.identificacion\")",
					"        })",
					"    }",
					"},",
					"    (_err, response) => pm.collectionVariables.set(\"token\", response.json().token)",
					");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "plan.categoria",
			"value": "",
			"type": "string"
		},
		{
			"key": "plan.objetivo.deporte",
			"value": "",
			"type": "string"
		},
		{
			"key": "plan.objetivo.exigencia",
			"value": "",
			"type": "string"
		},
		{
			"key": "correlation_id",
			"value": "\"dfebc03f-c6be-48b2-bb5f-4e49bddec908\"",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "http://127.0.0.1:3030",
			"type": "string"
		},
		{
			"key": "auth_url",
			"value": "http://127.0.0.1:3000",
			"type": "string"
		},
		{
			"key": "usuario.tipo_identificacion",
			"value": "\"CC\"",
			"type": "string"
		},
		{
			"key": "usuario.identificacion",
			"value": "\"123456789\"",
			"type": "string"
		},
		{
			"key": "usuario.deportes",
			"value": "[\"Ciclismo\"]",
			"type": "string"
		},
		{
			"key": "clasificacion_riesgo.imc.valor",
			"value": "21.76",
			"type": "string"
		},
		{
			"key": "clasificacion_riesgo.imc.categoria",
			"value": "\"Peso Normal\"",
			"type": "string"
		},
		{
			"key": "clasificacion_riesgo.riesgo",
			"value": "\"Alto\"",
			"type": "string"
		},
		{
			"key": "demografico.demografia.pais",
			"value": "\"Colombia\"",
			"type": "string"
		},
		{
			"key": "demografico.demografia.ciudad",
			"value": "\"Bogota\"",
			"type": "string"
		},
		{
			"key": "fisiologia.genero",
			"value": "\"M\"",
			"type": "string"
		},
		{
			"key": "fisiologia.edad",
			"value": "30",
			"type": "string"
		},
		{
			"key": "fisiologia.peso",
			"value": "70.5",
			"type": "string"
		},
		{
			"key": "fisiologia.altura",
			"value": "7.8",
			"type": "string"
		},
		{
			"key": "entrenamiento.grupo",
			"value": "\"gluteos\"",
			"type": "string"
		},
		{
			"key": "entrenamiento.imagen",
			"value": "\"https://imagenes.com/gluteos.png\"",
			"type": "string"
		},
		{
			"key": "entrenamiento.duracion.valor",
			"value": "10",
			"type": "string"
		},
		{
			"key": "entrenamiento.duracion.unidad",
			"value": "\"reps\"",
			"type": "string"
		},
		{
			"key": "entrenamiento.duracion.series",
			"value": "4",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "deportista.tipo_identificacion",
			"value": "CC",
			"type": "string"
		},
		{
			"key": "deportista.identificacion",
			"value": "123456789",
			"type": "string"
		},
		{
			"key": "planes.exigencia",
			"value": "[\"Alto rendimiento\", \"Alta\", \"Moderada\", \"Principiante\", \"Sedentario\"]",
			"type": "string"
		},
		{
			"key": "planes.categorias",
			"value": "[\"Resistencia\", \"Fortalecimiento\", \"Equilibrio\", \"Flexibilidad\"]",
			"type": "string"
		},
		{
			"key": "planes.deportes",
			"value": "[\"Atletismo\", \"Ciclismo\"]",
			"type": "string"
		},
		{
			"key": "planes.exigencia.count",
			"value": "4",
			"type": "string"
		},
		{
			"key": "planes.deportes.count",
			"value": "1",
			"type": "string"
		},
		{
			"key": "planes.categorias.count",
			"value": "3",
			"type": "string"
		},
		{
			"key": "planes.ids",
			"value": "",
			"type": "string"
		},
		{
			"key": "fake_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimentos.tipos_alimentacion",
			"value": "[\"Carnivoro\", \"Omnivoro\", \"Vegetariano\", \"Vegano\"]",
			"type": "string"
		},
		{
			"key": "alimento.deporte",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimento.grupo.porcion",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimento.tipo_alimentacion",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimento.grupo.calorias",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimentos.deportes.count",
			"value": "1",
			"type": "string"
		},
		{
			"key": "alimentos.tipos_alimentacion.count",
			"value": "3",
			"type": "string"
		},
		{
			"key": "alimento.grupo.grupo",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimento.grupo.unidad",
			"value": "",
			"type": "string"
		}
	]
}
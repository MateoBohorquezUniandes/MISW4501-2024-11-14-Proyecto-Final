{
	"info": {
		"_postman_id": "25ebe1ef-3bb5-4b41-aa41-961f95dbf19d",
		"name": "perfiles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3833174"
	},
	"item": [
		{
			"name": "demografico success",
			"item": [
				{
					"name": "perfilamiento inicial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"correlation_id\": {{correlation_id}},\n    \"type\": \"event\",\n    \"specversion\": \"v1\",\n    \"datacontenttype\": \"application/json\",\n    \"payload\": {\n        \"tipo_identificacion\": {{demografico.tipo_identificacion}},\n        \"identificacion\": {{demografico.identificacion}},\n        \"demografia\": {\n            \"pais_residencia\": {{demografico.demografia.pais}},\n            \"ciudad_residencia\": {{demografico.demografia.ciudad}}\n        },\n        \"fisiologia\": {\n            \"genero\": {{demografico.fisiologia.genero}},\n            \"edad\": {{demografico.fisiologia.edad}},\n            \"peso\": {{demografico.fisiologia.peso}},\n            \"altura\": {{demografico.fisiologia.altura}}\n        },\n        \"deportes\": {{demografico.deportes}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/demografico/init",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"demografico",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfil demografico",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json().data;",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.tipo_identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.clasificacion_riesgo).to.be.an('object');",
									"    pm.expect(responseData.reportes_sanguineo).to.be.an('array');",
									"    pm.expect(responseData.demografia).to.be.an('object');",
									"    pm.expect(responseData.fisiologia).to.be.an('object');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/demografico",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"demografico"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar clasificacion riesgo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"correlation_id\": {{correlation_id}},\n    \"type\": \"event\",\n    \"specversion\": \"v1\",\n    \"datacontenttype\": \"application/json\",\n    \"payload\": {\n        \"tipo_identificacion\": {{demografico.tipo_identificacion}},\n        \"identificacion\": {{demografico.identificacion}},\n        \"vo_max\": {{demografico.clasificacion.vo_max}}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/demografico/riesgo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"demografico",
								"riesgo"
							]
						}
					},
					"response": []
				},
				{
					"name": "validar clasificacion riesgo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json().data;",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.clasificacion_riesgo).to.be.an('object');",
									"    pm.expect(responseData.clasificacion_riesgo.riesgo).to.be.an('string');",
									"    pm.expect(responseData.clasificacion_riesgo.riesgo).to.be.equals('Muy Bajo');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/demografico",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"demografico"
							]
						}
					},
					"response": []
				},
				{
					"name": "asociar reporte sanguineo Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resultado\":{\r\n        \"tipo_examen\": {{demografico.reporte.tipo}},\r\n        \"valor\":{{demografico.reporte.valor}},\r\n        \"unidad\": {{demografico.reporte.unidad}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/demografico/reporte-sanguineo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"demografico",
								"reporte-sanguineo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deportivo success",
			"item": [
				{
					"name": "crear habito deportivo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payload\": {\r\n        \"titulo\": {{deportivo.habito.titulo}},\r\n        \"frecuencia\": {{deportivo.habito.frecuencia}},\r\n        \"descripcion\": {{deportivo.habito.descripcion}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/deportivo/habitos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"deportivo",
								"habitos"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear molestia",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payload\": {\r\n       \"titulo\": {{deportivo.molestia.titulo}},\r\n        \"descripcion\":{{deportivo.molestia.descripcion}},\r\n        \"tipo\": {{deportivo.molestia.tipo}},\r\n        \"fecha\": {{deportivo.molestia.fecha}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/deportivo/molestias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"deportivo",
								"molestias"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfiles deportivos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payload\": {\r\n        \"titulo\": \"\",\r\n        \"frecuencia\":\"\" ,\r\n        \"tipo\": \"\",\r\n        \"fecha\": \"\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/queries/deportivos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"deportivos"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfil deportivo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json().data;",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.tipo_identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.habitos).to.be.an('array');",
									"    pm.expect(responseData.molestias).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/deportivo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"deportivo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "alimenticio success",
			"item": [
				{
					"name": "Crear alimentos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"});",
									"",
									"var currentCount = parseInt(pm.collectionVariables.get(\"alimenticio.count\"));",
									"var categorias = JSON.parse(pm.collectionVariables.get(\"alimenticio.alimentos.categorias\")); ",
									"if (currentCount < categorias.length - 1) {",
									"    pm.collectionVariables.set(\"alimenticio.count\", currentCount + 1);",
									"    postman.setNextRequest(pm.info.requestName);",
									"} else {",
									"    postman.setNextRequest(\"alimentos\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var currentCount = parseInt(pm.collectionVariables.get(\"alimenticio.count\"));",
									"var categorias = JSON.parse(pm.collectionVariables.get(\"alimenticio.alimentos.categorias\"));",
									"var nombres = JSON.parse(pm.collectionVariables.get(\"alimenticio.alimentos.nombres\"));",
									"",
									"if (currentCount < categorias.length) {",
									"    console.log(currentCount, nombres[currentCount], categorias[currentCount])",
									"",
									"    pm.collectionVariables.set(\"alimenticio.alimento.nombre\", `\"${nombres[currentCount]}\"`);",
									"    pm.collectionVariables.set(\"alimenticio.alimento.categoria\", `\"${categorias[currentCount]}\"`);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": {{alimenticio.alimento.nombre}},\n    \"categoria\": {{alimenticio.alimento.categoria}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/alimentos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"alimentos"
							]
						}
					},
					"response": []
				},
				{
					"name": "alimentos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array');",
									"",
									"    const asociacion = pm.collectionVariables.get(\"alimenticio.alimento.nombre\").replace(/['\"]+/g, '');",
									"    let ids = responseData.data",
									"            .filter(a => a.nombre === asociacion)",
									"            .map(alimento => `\"${alimento.id}\"`);",
									"    console.log(ids)",
									"    pm.collectionVariables.set(\"alimenticio.alimento.id\", ids);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/alimentos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"alimentos"
							]
						}
					},
					"response": []
				},
				{
					"name": "asociar alimento",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{alimenticio.alimento.id}},\n    \"nombre\": {{alimenticio.alimento.nombre}},\n    \"categoria\": {{alimenticio.alimento.categoria}},\n    \"tipo\": {{alimenticio.alimento.tipo}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/alimenticio/alimentos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"alimenticio",
								"alimentos"
							]
						}
					},
					"response": []
				},
				{
					"name": "alimenticio.alimento.tipo_alimentacion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tipo_alimentacion\": {{alimenticio.alimento.tipo_alimentacion}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/alimenticio/tipo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"alimenticio",
								"tipo"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfil alimenticio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has the required fields', function () {",
									"    const responseData = pm.response.json().data;",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.tipo_identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.identificacion).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.tipo_alimentacion).to.be.an('string');",
									"    pm.expect(responseData.alimentos).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/alimenticio",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"alimenticio"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "demografico fail",
			"item": [
				{
					"name": "perfilamiento inicial duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 400', function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"correlation_id\": {{correlation_id}},\n    \"type\": \"event\",\n    \"specversion\": \"v1\",\n    \"datacontenttype\": \"application/json\",\n    \"payload\": {\n        \"tipo_identificacion\": {{demografico.tipo_identificacion}},\n        \"identificacion\": {{demografico.identificacion}},\n        \"demografia\": {\n            \"pais_residencia\": {{demografico.demografia.pais}},\n            \"ciudad_residencia\": {{demografico.demografia.ciudad}}\n        },\n        \"fisiologia\": {\n            \"genero\": {{demografico.fisiologia.genero}},\n            \"edad\": {{demografico.fisiologia.edad}},\n            \"peso\": {{demografico.fisiologia.peso}},\n            \"altura\": {{demografico.fisiologia.altura}}\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/demografico/init",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"demografico",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfil demografico sin token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/demografico",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"demografico"
							]
						}
					},
					"response": []
				},
				{
					"name": "perfil demografico inexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: `${pm.collectionVariables.get(\"auth_url\")}/auth`,",
									"    method: 'POST',",
									"    header: { 'content-type': 'application/json' },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"tipo\": pm.collectionVariables.get(\"demografico.tipo_identificacion\").replace(/['\"]+/g, ''),",
									"            \"valor\": \"fake_token\"",
									"        })",
									"    }",
									"},",
									"    (_err, response) => pm.collectionVariables.set(\"token_failure\", response.json().token)",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 404', function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_failure}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/perfiles/queries/demografico",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"queries",
								"demografico"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deportivo fail",
			"item": [
				{
					"name": "habito sin token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payload\": {\r\n        \"titulo\": {{deportivo.habito.titulo}},\r\n        \"frecuencia\": {{deportivo.habito.frecuencia}},\r\n        \"descripcion\": {{deportivo.habito.descripcion}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/perfiles/commands/deportivo/habitos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"perfiles",
								"commands",
								"deportivo",
								"habitos"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.sendRequest({",
					"    url: `${pm.collectionVariables.get(\"auth_url\")}/auth`,",
					"    method: 'POST',",
					"    header: { 'content-type': 'application/json' },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            \"tipo\": pm.collectionVariables.get(\"demografico.tipo_identificacion\").replace(/['\"]+/g, ''),",
					"            \"valor\": pm.collectionVariables.get(\"demografico.identificacion\").replace(/['\"]+/g, '')",
					"        })",
					"    }",
					"},",
					"    (_err, response) => pm.collectionVariables.set(\"token\", response.json().token)",
					");",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "demografico.tipo_identificacion",
			"value": "\"CC\"",
			"type": "string"
		},
		{
			"key": "demografico.identificacion",
			"value": "\"123456789\"",
			"type": "string"
		},
		{
			"key": "demografico.demografia.pais",
			"value": "\"Colombia\"",
			"type": "string"
		},
		{
			"key": "demografico.demografia.ciudad",
			"value": "\"Bogota\"",
			"type": "string"
		},
		{
			"key": "demografico.fisiologia.genero",
			"value": "\"M\"",
			"type": "string"
		},
		{
			"key": "demografico.fisiologia.edad",
			"value": "30",
			"type": "string"
		},
		{
			"key": "demografico.fisiologia.altura",
			"value": "1.80",
			"type": "string"
		},
		{
			"key": "demografico.fisiologia.peso",
			"value": "70.5",
			"type": "string"
		},
		{
			"key": "correlation_id",
			"value": "\"70f9a8c4-190f-49a2-9256-e0d4a4d2ab2a\"",
			"type": "string"
		},
		{
			"key": "auth_url",
			"value": "http://127.0.0.1:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "http://127.0.0.1:3021",
			"type": "string"
		},
		{
			"key": "deportivo.habito.titulo",
			"value": "\"correr 15 minutos\"",
			"type": "string"
		},
		{
			"key": "deportivo.habito.descripcion",
			"value": "\"salgo a correr hasta que me canse\"",
			"type": "string"
		},
		{
			"key": "deportivo.habito.frecuencia",
			"value": "\"Diario\"",
			"type": "string"
		},
		{
			"key": "deportivo.molestia.titulo",
			"value": "\"Dolor en la rodilla\"",
			"type": "string"
		},
		{
			"key": "deportivo.molestia.descripcion",
			"value": "\"Siento dolor al cargar peso\"",
			"type": "string"
		},
		{
			"key": "deportivo.molestia.fecha",
			"value": "\"2024-04-05\"",
			"type": "string"
		},
		{
			"key": "deportivo.molestia.tipo",
			"value": "\"Molestia\"",
			"type": "string"
		},
		{
			"key": "demografico.clasificacion.vo_max",
			"value": "35.7",
			"type": "string"
		},
		{
			"key": "demografico.deportes",
			"value": "[\"Ciclismo\"]",
			"type": "string"
		},
		{
			"key": "alimenticio.alimentos.categorias",
			"value": "[\"Carbohidrato\", \"Lipido\", \"Lacteo\", \"Fruta\", \"Verdura\", \"Proteina\"]",
			"type": "string"
		},
		{
			"key": "alimenticio.alimentos.nombres",
			"value": "[\"Arroz\", \"Aceite de Oliva\", \"Queso\", \"Fresa\", \"Tomate\", \"Pollo\"]",
			"type": "string"
		},
		{
			"key": "alimenticio.count",
			"value": "0",
			"type": "string"
		},
		{
			"key": "alimenticio.alimento.nombre",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimenticio.alimento.categoria",
			"value": "",
			"type": "string"
		},
		{
			"key": "token_failure",
			"value": "",
			"type": "string"
		},
		{
			"key": "alimenticio.alimento.tipo",
			"value": "\"Preferencia\"",
			"type": "string"
		},
		{
			"key": "alimenticio.alimento.id",
			"value": ""
		},
		{
			"key": "alimenticio.alimento.tipo_alimentacion",
			"value": "\"Vegetariano\"",
			"type": "string"
		},
		{
			"key": "demografico.reporte.tipo",
			"value": "\"Creatinina\"",
			"type": "string"
		},
		{
			"key": "demografico.reporte.valor",
			"value": "2.5",
			"type": "string"
		},
		{
			"key": "demografico.reporte.unidad",
			"value": "\"mg/dL\"",
			"type": "string"
		}
	]
}
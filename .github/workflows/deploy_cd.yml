name: Build and Deploy to GKE

on:
  push:
    branches:
      - feat/worlflow-deploy
      - release/**
      - main

  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }} # Add your cluster name here.
  GKE_ZONE: ${{ secrets.GKE_ZONE }} # Add your cluster zone here.
  IMAGE_TAG: latest # image tag
  GAR_ZONE: ${{ secrets.GAR_ZONE }} # artifact registry zone
  GAR_REPO: ${{ secrets.GAR_REPO }} # artifact registry repository

jobs:
  setup-build-publish:
    strategy:
      matrix:
        images: [autenticador, perfiles, usuarios, planes]
    name: Setup, Build and Publish
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Docker configuration
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            -f "${{ matrix.images }}.Dockerfile" \
            --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/${{ matrix.images}}-api:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/${{ matrix.images}}-api:$IMAGE_TAG"

  setup-deploy:
    name: Setup Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: setup-build-publish

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Docker configuration
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        if: contains('ref/release', github.ref)
        run: |-
          kubectl apply -f ./deployment
          kubectl get pods
